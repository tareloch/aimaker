"""
–°–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞
"""

import logging
import sys
from datetime import datetime
from pathlib import Path
from logging.handlers import RotatingFileHandler


def setup_logging(log_level: str = "INFO", log_dir: str = "logs"):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤
    Path(log_dir).mkdir(exist_ok=True)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    formatter = logging.Formatter(
        '%(asctime)s | %(name)s | %(levelname)s | %(message)s',
        datefmt='%Y-%m-%d %H:%M:%S'
    )
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –ª–æ–≥–≥–µ—Ä–∞
    root_logger = logging.getLogger()
    root_logger.setLevel(getattr(logging, log_level.upper()))
    
    # –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    root_logger.handlers.clear()
    
    # –ö–æ–Ω—Å–æ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    console_handler = logging.StreamHandler(sys.stdout)
    console_handler.setLevel(logging.INFO)
    console_handler.setFormatter(formatter)
    root_logger.addHandler(console_handler)
    
    # –§–∞–π–ª–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ–±—â–∏—Ö –ª–æ–≥–æ–≤
    general_log_file = Path(log_dir) / f"agent_{datetime.now().strftime('%Y%m%d')}.log"
    file_handler = RotatingFileHandler(
        general_log_file,
        maxBytes=10*1024*1024,  # 10MB
        backupCount=5
    )
    file_handler.setLevel(logging.DEBUG)
    file_handler.setFormatter(formatter)
    root_logger.addHandler(file_handler)
    
    # –û—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –æ—à–∏–±–æ–∫
    error_log_file = Path(log_dir) / f"errors_{datetime.now().strftime('%Y%m%d')}.log"
    error_handler = RotatingFileHandler(
        error_log_file,
        maxBytes=5*1024*1024,  # 5MB
        backupCount=3
    )
    error_handler.setLevel(logging.ERROR)
    error_handler.setFormatter(formatter)
    root_logger.addHandler(error_handler)
    
    # –û—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞
    earnings_log_file = Path(log_dir) / f"earnings_{datetime.now().strftime('%Y%m%d')}.log"
    earnings_handler = RotatingFileHandler(
        earnings_log_file,
        maxBytes=5*1024*1024,  # 5MB
        backupCount=10
    )
    earnings_handler.setLevel(logging.INFO)
    
    # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä –¥–ª—è –ª–æ–≥–æ–≤ –∑–∞—Ä–∞–±–æ—Ç–∫–∞
    earnings_formatter = logging.Formatter(
        '%(asctime)s | EARNINGS | %(message)s',
        datefmt='%Y-%m-%d %H:%M:%S'
    )
    earnings_handler.setFormatter(earnings_formatter)
    
    # –°–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π –ª–æ–≥–≥–µ—Ä –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞
    earnings_logger = logging.getLogger("earnings")
    earnings_logger.addHandler(earnings_handler)
    earnings_logger.setLevel(logging.INFO)
    earnings_logger.propagate = False  # –ù–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ª–æ–≥–≥–µ—Ä
    
    logging.info("üìù –°–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")


class EarningsLogger:
    """–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ª–æ–≥–≥–µ—Ä –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞"""
    
    def __init__(self):
        self.logger = logging.getLogger("earnings")
    
    def log_earning(self, strategy: str, amount: float, source: str = "", details: str = ""):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞—Ä–∞–±–æ—Ç–∫–∞"""
        message = f"Strategy: {strategy} | Amount: ${amount:.2f}"
        
        if source:
            message += f" | Source: {source}"
        
        if details:
            message += f" | Details: {details}"
        
        self.logger.info(message)
    
    def log_loss(self, strategy: str, amount: float, reason: str = ""):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Ç–µ—Ä—å"""
        message = f"LOSS - Strategy: {strategy} | Amount: ${amount:.2f}"
        
        if reason:
            message += f" | Reason: {reason}"
        
        self.logger.warning(message)
    
    def log_goal_achieved(self, daily_amount: float, total_amount: float):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–∏"""
        message = f"GOAL ACHIEVED! Daily: ${daily_amount:.2f} | Total: ${total_amount:.2f}"
        self.logger.info(message)